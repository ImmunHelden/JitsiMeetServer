[all:vars]

#
# Basic configuration options
#

# Directory where all configuration will be stored
config_folder="/opt/jitsi"

# Exposed HTTP port
http_port="80"

# Exposed HTTPS port
https_port="443"

# System time zone
time_zone="Europe/Berlin"

# Public URL for the web service
public_url="https://meet.immunhelden.de/"

# IP address of the Docker host
# See the "Running behind NAT or on a LAN environment" section in the README
# This variable ist set from the ansible host var
#DOCKER_HOST_ADDRESS=192.168.164.86

#
# Let's Encrypt configuration
#

# Enable Let's Encrypt certificate generation
enable_letsencrypt="1"

# Domain for which to generate the certificate
letsencrypt_domain="meet.immunhelden.de"

# Test cert parameter injection
# Trough parameter injection and additional mounting inside docker-compose a lets encrypt test cert can be generated
# letsencrypt_email="team@immunhelden.de --test-cert --break-my-certs"

# E-Mail for receiving important account notifications (mandatory)
letsencrypt_email="team@immunhelden.de"

#
# Etherpad integration (for document sharing)
#

# Set etherpad-lite URL (uncomment to enable)
#etherpad_url_base="http://etherpad.meet.jitsi:9001"

#
# Basic Jigasi configuration options (needed for SIP gateway support)
#

# SIP URI for incoming / outgoing calls
jigasi_sip_uri=""

# Password for the specified SIP account as a clear text
jigasi_sip_password=""

# SIP server (use the SIP account domain if in doubt)
jigasi_sip_server=""

# SIP server port
jigasi_sip_port=""

# SIP server transport
jigasi_sip_transport=""

#
# Authentication configuration (see README for details)
#

# Enable authentication
enable_auth=1

# Enable guest access
#enable_guests=""

# Select authentication type: internal, jwt or ldap
auth_type="internal"

# JWT authentication

# Application identifier
jwt_app_id=""

# Application secret known only to your token
jwt_app_secret=""

# (Optional) Set asap_accepted_issuers as a comma separated list
jwt_accepted_issuers=""

# (Optional) Set asap_accepted_audiences as a comma separated list
jwt_accepted_audiences=""

# TODO: not implemented in the jinja2 template (.env.j2)
# LDAP authentication (for more information see the Cyrus SASL saslauthd.conf man page)
#

# LDAP url for connection
#ldap_url=""

# LDAP base DN. Can be empty
#ldap_base=""

# LDAP user DN. Do not specify this parameter for the anonymous bind
#ldap_binddn=""

# LDAP user password. Do not specify this parameter for the anonymous bind
#ldap_bindpw=""

# LDAP filter. Tokens example:
# %1-9 - if the input key is user@mail.domain.com, then %1 is com, %2 is domain and %3 is mail
# %s - %s is replaced by the complete service string
# %r - %r is replaced by the complete realm string
#ldap_filter=""

# LDAP authentication method
#ldap_auth_method=""

# LDAP version
#ldap_version=""

# LDAP TLS using
#ldap_use_tls=""

# List of SSL/TLS ciphers to allow
#ldap_tls_ciphers=""

# Require and verify server certificate
#ldap_tls_check_peer=""

# Path to CA cert file. Used when server certificate verify is enabled
#ldap_tls_cacert_file=""

# Path to CA certs directory. Used when server certificate verify is enabled
#ldap_tls_cacert_dir=""

# Wether to use starttls, implies LDAPv3 and requires ldap:// instead of ldaps://
#ldap_start_tls=""


#
# Advanced configuration options (you generally don't need to change these)
#

# Internal XMPP domain
xmpp_domain="meet.jitsi"

# Internal XMPP server
xmpp_server="xmpp.meet.jitsi"

# Internal XMPP server URL
xmpp_bosh_url_base="http://xmpp.meet.jitsi:5280"

# Internal XMPP domain for authenticated services
xmpp_auth_domain="auth.meet.jitsi"

# XMPP domain for the MUC
xmpp_muc_domain="muc.meet.jitsi"

# XMPP domain for the internal MUC used for jibri, jigasi and jvb pools
xmpp_internal_muc_domain="internal-muc.meet.jitsi"

# XMPP domain for unauthenticated users
xmpp_guest_domain="guest.meet.jitsi"

# Custom Prosody modules for XMPP_DOMAIN (comma separated)
xmpp_modules=""

# Custom Prosody modules for MUC component (comma separated)
xmpp_muc_modules=""

# Custom Prosody modules for internal MUC component (comma separated)
xmpp_internal_muc_modules=""

# MUC for the JVB pool
jvb_brewery_muc="jvbbrewery"

# XMPP user for JVB client connections
jvb_auth_user="jvb"

# STUN servers used to discover the server's public IP
jvb_stun_servers="meet-jit-si-turnrelay.jitsi.net:443"

# Media port for the Jitsi Videobridge
jvb_port="10000"

# TCP Fallback for Jitsi Videobridge for when UDP isn't available
jvb_tcp_harvester_disabled="true"
jvb_tcp_port="4443"
jvb_tcp_mapped_port="4443"

# A comma separated list of APIs to enable when the JVB is started [default: none]
# See https://github.com/jitsi/jitsi-videobridge/blob/master/doc/rest.md for more information
#jvb_enable_apis="rest,colibri"

# XMPP user for Jicofo client connections.
# NOTE: this option doesn't currently work due to a bug
jicofo_auth_user="focus"

# Base URL of Jicofo's reservation REST API
#jicofo_reservation_rest:base_url=http://reservation.example.com

# XMPP user for Jigasi MUC client connections
jigasi_xmpp_user="jigasi"

# MUC name for the Jigasi pool
jigasi_brewery_muc="jigasibrewery"

# Minimum port for media used by Jigasi
jigasi_port_min="20000"

# Maximum port for media used by Jigasi
jigasi_port_max="20050"

# TODO: not implemented in the jinja2 template (.env.j2)
# Enable SDES srtp
#jigasi_enable_sdes_srtp="1"

# Keepalive method
#jigasi_sip_peep_alive_method="OPTIONS"

# Health-check extension
#jigasi_health_check_sip_uri="keepalive"

# Health-check interval
#jigasi_health_check_interval="300000"

# Enable Jigasi transcription
#enable_transcriptions="1"

# Jigasi will record audio when transcriber is on [default: false]
#jigasi_transcriber_record_audio="true"

# Jigasi will send transcribed text to the chat when transcriber is on [default: false]
#jigasi_transcriber_send_txt="true"

# Jigasi will post an url to the chat with transcription file [default: false]
#jigasi_transcriber_advertise_url="true"

# Credentials for connect to Cloud Google API from Jigasi
# Please read https://cloud.google.com/text-to-speech/docs/quickstart-protocol
# section "Before you begin" paragraph 1 to 5
# Copy the values from the json to the related env vars
#gc_project_id=""
#gc_private_key_id=""
#gc_prvate_key=""
#gc_client_email=""
#gc_client_id=""
#gc_client_cert_url=""

# Enable recording
#enable_recording="1"

# XMPP domain for the jibri recorder
xmpp_recorder_domain="recorder.meet.jitsi"

# XMPP recorder user for Jibri client connections
jibri_recorder_user="recorder"

# Directory for recordings inside Jibri container
jibri_recording_dir="/config/recordings"

# The finalizing script. Will run after recording is complete
jibri_finalize_recording_script_path="/config/finalize.sh"

# XMPP user for Jibri client connections
jibri_xmpp_user="jibri"

# MUC name for the Jibri pool
jibri_brewery_muc="jibribrewery"

# MUC connection timeout
jibri_pending_timeout="90"

# When jibri gets a request to start a service for a room, the room
# jid will look like: roomName@optional.prefixes.subdomain.xmpp_domain
# We'll build the url for the call by transforming that into:
# https://xmpp_domain/subdomain/roomName
# So if there are any prefixes in the jid (like jitsi meet, which
# has its participants join a muc at conference.xmpp_domain) then
# list that prefix here so it can be stripped out to generate
# the call url correctly
jibri_strip_domain_jid="muc"

# Directory for logs inside Jibri container
jibri_logs_dir="/config/logs"

# Disable HTTPS: handle TLS connections outside of this setup
#disable_https=1

# Redirect HTTP traffic to HTTPS
# Necessary for Let's Encrypt, relies on standard HTTPS port (443)
enable_http_redirect=1

# Container restart policy
# Defaults to unless-stopped
# "no"
# "always"
# "on-failure"
# "unless-stopped"
restart_policy="unless-stopped"
